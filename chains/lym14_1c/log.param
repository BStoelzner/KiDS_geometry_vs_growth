#-----CLASS v2.9.0 (branch: master, hash: 75c9d34f35c03884c10575d45cfeaaab405ed5fc)-----

(separated with commas)-----

data.experiments=['eBOSS_DR14_Lya_combined']

#------ Settings for the over-sampling. The first element will always be set to
# 1, for it is the sampling of the cosmological parameters. The other numbers
# describe the over sampling of the nuisance parameter space. This array must
# have the same dimension as the number of blocks in your run (so, 1 for
# cosmological parameters, and then 1 for each experiment with varying nuisance
# parameters).
#data.over_sampling=[1, 4]

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo' or 'nuisance'

# Cosmological parameters list
# main parameters to extract:

data.parameters['omega_cdm']    = [0.11919,   0.01, 0.99, 0.0027,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [3.0753,   1.7, 5., 0.0029,    1, 'cosmo']
data.parameters['omega_b']      = [0.022253,  0.01875, 0.02625, 0.028,  1, 'cosmo']
data.parameters['n_s']          = [0.96229,   0.7, 1.3, 0.0074,    1, 'cosmo']
data.parameters['h']         	= [0.673,     0.64,   0.82,   0.0065, 1, 'cosmo']

# Nuisance parameters:

# amplitude for intrinsic alignments (IA):
#data.parameters['A_IA'] = [0.0, -6.0, 6.0, 1.0, 1, 'nuisance']

# amplitude for baryon feedback with 'halofit':
#data.parameters['A_bary'] = [0.75, 0.5, 1., 0.5, 1, 'nuisance']

# parameters for baryon feedback with 'hmcode':
#data.parameters['c_min'] = [3., 2., 3.13, 1., 1, 'cosmo']
#data.parameters['eta_0'] = [0.7, 0.59, 0.81, 1., 1, 'cosmo']

# nuisance parameters for c-correction:
#data.parameters['dc'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']
#data.parameters['Ac'] = [ 1.01, 0.62, 1.40, 0.13, 1, 'nuisance']

#derived parameters:

data.parameters['Omega_m']      = [1, None, None, 0, 1, 'derived']  
data.parameters['sigma8']       = [1, None, None, 0, 1, 'derived']  

### Delta-z parameters ###
##ZP:added into the mix
#data.parameters['D_z1'] = [ 0., -0.117, 0.117, 0.01, 1, 'nuisance']
#data.parameters['D_z2'] = [ 0., -0.069, 0.069, 0.01, 1, 'nuisance']
#data.parameters['D_z3'] = [ 0., -0.078, 0.078, 0.01, 1, 'nuisance']
#data.parameters['D_z4'] = [ 0., -0.036, 0.036, 0.01, 1, 'nuisance']
#data.parameters['D_z5'] = [ 0., -0.033, 0.033, 0.01, 1, 'nuisance']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

# fix main cosmology to Planck:
data.cosmo_arguments['Omega_k'] = 0.

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that these
# three species contribute equally
# to the radiation density at large
# redshift, with a total of Neff=3.046
data.cosmo_arguments['N_eff'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611

# standard BBN prediction of the primordial Helium abundance $Y_p$:
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

# only needed for regular MCMC:
data.write_step = 1



#-----Likelihood-eBOSS_DR14_Lya_combined-----
eBOSS_DR14_Lya_combined.data_directory = '/home/ug19_jrz/montepython_public/data'
eBOSS_DR14_Lya_combined.cf_scan = 'eBOSS_DR14_scans/eBOSS_DR14_Lya_combined_scan.dat'
eBOSS_DR14_Lya_combined.rd_rescale = 1.0
eBOSS_DR14_Lya_combined.transverse_fid = 39.26
eBOSS_DR14_Lya_combined.file = 'eBOSS_DR14_scans/eBOSS_DR14_scan_aux.txt'
eBOSS_DR14_Lya_combined.parallel_fid = 8.581


#-----------Cosmological-arguments---------
data.cosmo_arguments.update({'sBBN file': '/share/splinter/ug19_jrz/class_public/bbn/sBBN.dat', 'P_k_max_h/Mpc': '1.', 'output': ' mPk ', 'z_max_pk': '1.', 'm_ncdm': 0.06, 'Omega_k': 0.0, 'k_pivot': 0.05, 'N_ncdm': 1, 'T_ncdm': 0.71611, 'N_eff': 2.0328})


#--------Default-Configuration------
data.path['cosmo']	= '/share/splinter/ug19_jrz/class_public'
data.path['root']	= '/home/ug19_jrz/montepython_public'
data.path['data']	= '/home/ug19_jrz/montepython_public/data'
data.path['clik']	= '/share/splinter/ug19_jrz/planck/plc-2.0'
data.path['MontePython']	= '/home/ug19_jrz/montepython_public/montepython'
